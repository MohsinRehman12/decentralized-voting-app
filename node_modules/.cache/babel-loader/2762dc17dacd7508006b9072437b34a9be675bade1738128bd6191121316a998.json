{"ast":null,"code":"var _jsxFileName = \"C:\\\\votingdapp\\\\src\\\\pages\\\\VotingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VotePage() {\n  _s();\n  const {\n    electionId\n  } = useParams(); // Get electionId from the URL\n  const [candidates, setCandidates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchCandidates = async () => {\n      try {\n        const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\");\n        const contract = new ethers.Contract(VotingAddress, VotingAbi, provider);\n        const data = await contract.getCandidates(electionId);\n        const formatted = data.map(candidate => ({\n          name: candidate.name,\n          voteCount: candidate.voteCount.toString()\n        }));\n        setCandidates(formatted);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching candidates:\", error);\n      }\n    };\n    fetchCandidates();\n  }, [electionId]);\n  const handleVote = async candidateIndex => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\n      const tx = await contract.vote(electionId, candidateIndex);\n      await tx.wait();\n      alert(\"Vote successfully cast!\");\n    } catch (error) {\n      console.error(\"Error during voting:\", error);\n      alert(\"Failed to cast vote. Please try again.\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading candidates...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Vote in Election \", electionId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: candidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [candidate.name, \": \", candidate.voteCount, \" votes\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVote(index),\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(VotePage, \"m2Sk+minhf7U0VgKJCpwOEupMCs=\", false, function () {\n  return [useParams];\n});\n_c = VotePage;\nexport default VotePage;\nvar _c;\n$RefreshReg$(_c, \"VotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","ethers","VotingAddress","VotingAbi","jsxDEV","_jsxDEV","VotePage","_s","electionId","candidates","setCandidates","loading","setLoading","fetchCandidates","provider","providers","JsonRpcProvider","contract","Contract","data","getCandidates","formatted","map","candidate","name","voteCount","toString","error","console","handleVote","candidateIndex","Web3Provider","window","ethereum","signer","getSigner","tx","vote","wait","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","_c","$RefreshReg$"],"sources":["C:/votingdapp/src/pages/VotingPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ethers } from \"ethers\";\r\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\r\n\r\nfunction VotePage() {\r\n    const { electionId } = useParams(); // Get electionId from the URL\r\n    const [candidates, setCandidates] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchCandidates = async () => {\r\n            try {\r\n                const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\");\r\n                const contract = new ethers.Contract(VotingAddress, VotingAbi, provider);\r\n\r\n                const data = await contract.getCandidates(electionId);\r\n                const formatted = data.map((candidate) => ({\r\n                    name: candidate.name,\r\n                    voteCount: candidate.voteCount.toString(),\r\n                }));\r\n\r\n                setCandidates(formatted);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error(\"Error fetching candidates:\", error);\r\n            }\r\n        };\r\n\r\n        fetchCandidates();\r\n    }, [electionId]);\r\n\r\n    const handleVote = async (candidateIndex) => {\r\n        try {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n            const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\r\n\r\n            const tx = await contract.vote(electionId, candidateIndex);\r\n            await tx.wait();\r\n\r\n            alert(\"Vote successfully cast!\");\r\n        } catch (error) {\r\n            console.error(\"Error during voting:\", error);\r\n            alert(\"Failed to cast vote. Please try again.\");\r\n        }\r\n    };\r\n\r\n    if (loading) return <p>Loading candidates...</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Vote in Election {electionId}</h1>\r\n            <ul>\r\n                {candidates.map((candidate, index) => (\r\n                    <li key={index}>\r\n                        {candidate.name}: {candidate.voteCount} votes\r\n                        <button onClick={() => handleVote(index)}>Vote</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VotePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}