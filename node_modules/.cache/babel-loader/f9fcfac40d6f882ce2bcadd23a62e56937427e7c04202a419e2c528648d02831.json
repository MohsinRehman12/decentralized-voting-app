{"ast":null,"code":"var _jsxFileName = \"C:\\\\votingdapp\\\\src\\\\pages\\\\VotingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VotingPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [candidates, setCandidates] = useState([]);\n  const [error, setError] = useState(null);\n  const [canVote, setCanVote] = useState(true);\n\n  // Initialize provider and signer\n  const initializeProvider = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\n    return {\n      provider,\n      signer,\n      contract\n    };\n  };\n  const checkVoterStatus = async () => {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\n      const voterStatus = await contract.hasVoted(id, await signer.getAddress());\n      setCanVote(!voterStatus);\n    } catch (err) {\n      console.error(\"Error checking voter status:\", err);\n    }\n  };\n  const fetchCandidates = async () => {\n    try {\n      const {\n        contract\n      } = await initializeProvider();\n      const fetchedCandidates = await contract.getCandidates(id);\n      const formattedCandidates = fetchedCandidates.map(candidate => ({\n        name: candidate.name,\n        voteCount: candidate.voteCount.toString()\n      }));\n      setCandidates(formattedCandidates);\n    } catch (err) {\n      console.error(\"Error fetching candidates:\", err);\n      setError(\"Failed to load candidates.\");\n    }\n  };\n  const checkCanVote = async () => {\n    try {\n      const {\n        signer,\n        contract\n      } = await initializeProvider();\n      const voterAddress = await signer.getAddress();\n      const voteStatus = await contract.voters(voterAddress);\n      setCanVote(!voteStatus);\n    } catch (err) {\n      console.error(\"Error checking vote status:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchCandidates();\n    checkCanVote();\n    checkVoterStatus();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Election \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }, this), canVote ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: candidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [candidate.name, \": \", candidate.voteCount, \" votes\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => vote(index),\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You have already voted.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(VotingPage, \"WL+bSZgvqn+VpyU93KdaweS3mEc=\", false, function () {\n  return [useParams];\n});\n_c = VotingPage;\nexport default VotingPage;\nvar _c;\n$RefreshReg$(_c, \"VotingPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","ethers","VotingAddress","VotingAbi","Button","jsxDEV","_jsxDEV","VotingPage","_s","id","candidates","setCandidates","error","setError","canVote","setCanVote","initializeProvider","provider","providers","Web3Provider","window","ethereum","send","signer","getSigner","contract","Contract","checkVoterStatus","voterStatus","hasVoted","getAddress","err","console","fetchCandidates","fetchedCandidates","getCandidates","formattedCandidates","map","candidate","name","voteCount","toString","checkCanVote","voterAddress","voteStatus","voters","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","index","variant","onClick","vote","marginLeft","_c","$RefreshReg$"],"sources":["C:/votingdapp/src/pages/VotingPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ethers } from \"ethers\";\r\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nfunction VotingPage() {\r\n    const { id } = useParams();\r\n    const [candidates, setCandidates] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [canVote, setCanVote] = useState(true);\r\n\r\n    // Initialize provider and signer\r\n    const initializeProvider = async () => {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        await provider.send(\"eth_requestAccounts\", []);\r\n        const signer = provider.getSigner();\r\n        const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\r\n\r\n        return { provider, signer, contract };\r\n    };\r\n\r\n    const checkVoterStatus = async () => {\r\n        try {\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            await provider.send(\"eth_requestAccounts\", []);\r\n            const signer = provider.getSigner();\r\n            const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\r\n    \r\n            const voterStatus = await contract.hasVoted(id, await signer.getAddress());\r\n            setCanVote(!voterStatus);\r\n        } catch (err) {\r\n            console.error(\"Error checking voter status:\", err);\r\n        }\r\n    };\r\n    \r\n\r\n    const fetchCandidates = async () => {\r\n        try {\r\n            const { contract } = await initializeProvider();\r\n            const fetchedCandidates = await contract.getCandidates(id);\r\n\r\n            const formattedCandidates = fetchedCandidates.map((candidate) => ({\r\n                name: candidate.name,\r\n                voteCount: candidate.voteCount.toString(),\r\n            }));\r\n\r\n            setCandidates(formattedCandidates);\r\n        } catch (err) {\r\n            console.error(\"Error fetching candidates:\", err);\r\n            setError(\"Failed to load candidates.\");\r\n        }\r\n    };\r\n\r\n    const checkCanVote = async () => {\r\n        try {\r\n            const { signer, contract } = await initializeProvider();\r\n            const voterAddress = await signer.getAddress();\r\n            const voteStatus = await contract.voters(voterAddress);\r\n\r\n            setCanVote(!voteStatus);\r\n        } catch (err) {\r\n            console.error(\"Error checking vote status:\", err);\r\n        }\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        fetchCandidates();\r\n        checkCanVote();\r\n        checkVoterStatus();\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Election {id}</h1>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            {canVote ? (\r\n                <ul>\r\n                    {candidates.map((candidate, index) => (\r\n                        <li key={index}>\r\n                            {candidate.name}: {candidate.voteCount} votes\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={() => vote(index)}\r\n                                style={{ marginLeft: \"10px\" }}\r\n                            >\r\n                                Vote\r\n                            </Button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            ) : (\r\n                <p>You have already voted.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VotingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}