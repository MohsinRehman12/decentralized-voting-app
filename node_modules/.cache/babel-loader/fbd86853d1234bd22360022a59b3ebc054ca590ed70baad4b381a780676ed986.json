{"ast":null,"code":"var _jsxFileName = \"C:\\\\votingdapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { VotingAddress, VotingAbi } from \"./context/constant\";\nimport CreateElection from \"./components/CreateElection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [elections, setElections] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchElections = async () => {\n    try {\n      console.log(\"Starting fetchElections...\");\n\n      // Set up the provider\n      const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\n        name: \"hardhat\",\n        chainId: 31337\n      });\n      console.log(\"Provider initialized:\", provider);\n\n      // Initialize signer\n      const signer = provider.getSigner();\n      const signerAddress = await signer.getAddress();\n      console.log(\"Signer address:\", signerAddress);\n\n      // Initialize contract\n      const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\n      console.log(\"Contract instance:\", contract);\n\n      // Fetch the number of elections\n      const electionCount = await contract.electionCount();\n      console.log(\"Total elections:\", electionCount.toString());\n      const fetchedElections = [];\n\n      // Fetch details for each election\n      for (let i = 0; i < electionCount; i++) {\n        const election = await contract.getElection(i);\n\n        // Fetch candidates for the election\n        const candidates = await contract.getCandidates(i);\n\n        // Format the candidates\n        const formattedCandidates = candidates.map(candidate => ({\n          name: candidate.name,\n          voteCount: candidate.voteCount.toString()\n        }));\n\n        // Calculate remaining time\n        const currentTime = Math.floor(Date.now() / 1000); // Current time in seconds\n        const remainingTime = Math.max(0, election.endTime - currentTime);\n        fetchedElections.push({\n          title: election.title,\n          owner: election.owner,\n          remainingTime,\n          candidates: formattedCandidates\n        });\n      }\n      setElections(fetchedElections);\n      console.log(\"Fetched elections:\", fetchedElections);\n    } catch (error) {\n      console.error(\"Error in fetchElections:\", error);\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    fetchElections();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Voting App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 23\n    }, this), elections.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading elections...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: elections.map((election, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: election.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Owner:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), \" \", election.owner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time Remaining:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this), \" \", election.remainingTime > 0 ? `${Math.floor(election.remainingTime / 60)} minutes` : \"Election has ended\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: election.candidates.map((candidate, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [candidate.name, \": \", candidate.voteCount, \" votes\"]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CreateElection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Io/IwHZ7CUTOTVWdIgpGY4THLpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ethers","VotingAddress","VotingAbi","CreateElection","jsxDEV","_jsxDEV","App","_s","elections","setElections","error","setError","fetchElections","console","log","provider","providers","JsonRpcProvider","name","chainId","signer","getSigner","signerAddress","getAddress","contract","Contract","electionCount","toString","fetchedElections","i","election","getElection","candidates","getCandidates","formattedCandidates","map","candidate","voteCount","currentTime","Math","floor","Date","now","remainingTime","max","endTime","push","title","owner","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","index","idx","_c","$RefreshReg$"],"sources":["C:/votingdapp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { VotingAddress, VotingAbi } from \"./context/constant\";\nimport CreateElection from \"./components/CreateElection\";\nfunction App() {\n    const [elections, setElections] = useState([]);\n    const [error, setError] = useState(null);\n\n    const fetchElections = async () => {\n        try {\n            console.log(\"Starting fetchElections...\");\n\n            // Set up the provider\n            const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\n                name: \"hardhat\",\n                chainId: 31337,\n            });\n            console.log(\"Provider initialized:\", provider);\n\n            // Initialize signer\n            const signer = provider.getSigner();\n            const signerAddress = await signer.getAddress();\n            console.log(\"Signer address:\", signerAddress);\n\n            // Initialize contract\n            const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\n            console.log(\"Contract instance:\", contract);\n\n            // Fetch the number of elections\n            const electionCount = await contract.electionCount();\n            console.log(\"Total elections:\", electionCount.toString());\n\n            const fetchedElections = [];\n\n            // Fetch details for each election\n            for (let i = 0; i < electionCount; i++) {\n                const election = await contract.getElection(i);\n\n                // Fetch candidates for the election\n                const candidates = await contract.getCandidates(i);\n\n                // Format the candidates\n                const formattedCandidates = candidates.map((candidate) => ({\n                    name: candidate.name,\n                    voteCount: candidate.voteCount.toString(),\n                }));\n\n                // Calculate remaining time\n                const currentTime = Math.floor(Date.now() / 1000); // Current time in seconds\n                const remainingTime = Math.max(0, election.endTime - currentTime);\n\n                fetchedElections.push({\n                    title: election.title,\n                    owner: election.owner,\n                    remainingTime,\n                    candidates: formattedCandidates,\n                });\n            }\n\n            setElections(fetchedElections);\n            console.log(\"Fetched elections:\", fetchedElections);\n        } catch (error) {\n            console.error(\"Error in fetchElections:\", error);\n            setError(error.message);\n        }\n    };\n\n    useEffect(() => {\n        fetchElections();\n    }, []);\n\n    return (\n        <div>\n            <h1>Voting App</h1>\n            {error && <p style={{ color: \"red\" }}>Error: {error}</p>}\n            {elections.length === 0 ? (\n                <p>Loading elections...</p>\n            ) : (\n                <div>\n                    {elections.map((election, index) => (\n                        <div key={index}>\n                            <h2>{election.title}</h2>\n                            <p>\n                                <strong>Owner:</strong> {election.owner}\n                            </p>\n                            <p>\n                                <strong>Time Remaining:</strong>{\" \"}\n                                {election.remainingTime > 0\n                                    ? `${Math.floor(election.remainingTime / 60)} minutes`\n                                    : \"Election has ended\"}\n                            </p>\n                            <ul>\n                                {election.candidates.map((candidate, idx) => (\n                                    <li key={idx}>\n                                        {candidate.name}: {candidate.voteCount} votes\n                                    </li>\n                                ))}\n                            </ul>\n                            <hr />\n                        </div>\n                    ))}\n                </div>\n            )}\n            <CreateElection />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}