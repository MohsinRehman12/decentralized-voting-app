{"ast":null,"code":"var _jsxFileName = \"C:\\\\votingdapp\\\\src\\\\pages\\\\VotingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VotingPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [candidates, setCandidates] = useState([]);\n  const [error, setError] = useState(null);\n  const [canVote, setCanVote] = useState(false);\n  const [electionStatus, setElectionStatus] = useState(\"\");\n  const [signerAddress, setSignerAddress] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false); // Add loading state\n\n  // ... (rest of the code remains the same)\n\n  // Fetch election details with error handling\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const {\n          contract\n        } = await initializeProvider();\n        const election = await contract.getElection(id);\n        const fetchedCandidates = await contract.getCandidates(id);\n\n        // ... (rest of the data processing and state updates)\n      } catch (err) {\n        console.error(\"Error fetching election details:\", err);\n        setError(\"Failed to load election details.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [id]);\n\n  // Voting function with improved error handling\n  const vote = async candidateIndex => {\n    try {\n      setIsLoading(true); // Set loading state to true\n      const {\n        contract\n      } = await initializeProvider();\n\n      // ... (rest of the voting logic)\n\n      setError(\"Successfully voted!\");\n      setIsLoading(false); // Set loading state to false\n    } catch (err) {\n      console.error(\"Error during voting:\", err);\n      setError(\"An unexpected error occurred. Please try again.\");\n      setIsLoading(false); // Set loading state to false\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(VotingPage, \"+woM1s+NZwSz6Z960sBv/qA8Q2Y=\", false, function () {\n  return [useParams];\n});\n_c = VotingPage;\nexport default VotingPage;\nvar _c;\n$RefreshReg$(_c, \"VotingPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","ethers","VotingAddress","VotingAbi","Button","jsxDEV","_jsxDEV","VotingPage","_s","id","candidates","setCandidates","error","setError","canVote","setCanVote","electionStatus","setElectionStatus","signerAddress","setSignerAddress","isLoading","setIsLoading","fetchData","contract","initializeProvider","election","getElection","fetchedCandidates","getCandidates","err","console","vote","candidateIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/votingdapp/src/pages/VotingPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ethers } from \"ethers\";\r\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nfunction VotingPage() {\r\n  const { id } = useParams();\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [canVote, setCanVote] = useState(false);\r\n  const [electionStatus, setElectionStatus] = useState(\"\");\r\n  const [signerAddress, setSignerAddress] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false); // Add loading state\r\n\r\n  // ... (rest of the code remains the same)\r\n\r\n  // Fetch election details with error handling\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const { contract } = await initializeProvider();\r\n        const election = await contract.getElection(id);\r\n        const fetchedCandidates = await contract.getCandidates(id);\r\n\r\n        // ... (rest of the data processing and state updates)\r\n\r\n      } catch (err) {\r\n        console.error(\"Error fetching election details:\", err);\r\n        setError(\"Failed to load election details.\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  // Voting function with improved error handling\r\n  const vote = async (candidateIndex) => {\r\n    try {\r\n      setIsLoading(true); // Set loading state to true\r\n      const { contract } = await initializeProvider();\r\n\r\n      // ... (rest of the voting logic)\r\n\r\n      setError(\"Successfully voted!\");\r\n      setIsLoading(false); // Set loading state to false\r\n    } catch (err) {\r\n      console.error(\"Error during voting:\", err);\r\n      setError(\"An unexpected error occurred. Please try again.\");\r\n      setIsLoading(false); // Set loading state to false\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* ... (rest of the JSX remains the same) */}\r\n      {isLoading && <p>Loading...</p>}\r\n      {/* ... (rest of the JSX remains the same) */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VotingPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,aAAa,EAAEC,SAAS,QAAQ,qBAAqB;AAC9D,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD;;EAEA;EACAD,SAAS,CAAC,MAAM;IACd,MAAMwB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BD,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAM;UAAEE;QAAS,CAAC,GAAG,MAAMC,kBAAkB,CAAC,CAAC;QAC/C,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,WAAW,CAACjB,EAAE,CAAC;QAC/C,MAAMkB,iBAAiB,GAAG,MAAMJ,QAAQ,CAACK,aAAa,CAACnB,EAAE,CAAC;;QAE1D;MAEF,CAAC,CAAC,OAAOoB,GAAG,EAAE;QACZC,OAAO,CAAClB,KAAK,CAAC,kCAAkC,EAAEiB,GAAG,CAAC;QACtDhB,QAAQ,CAAC,kCAAkC,CAAC;MAC9C,CAAC,SAAS;QACRQ,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACb,EAAE,CAAC,CAAC;;EAER;EACA,MAAMsB,IAAI,GAAG,MAAOC,cAAc,IAAK;IACrC,IAAI;MACFX,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACpB,MAAM;QAAEE;MAAS,CAAC,GAAG,MAAMC,kBAAkB,CAAC,CAAC;;MAE/C;;MAEAX,QAAQ,CAAC,qBAAqB,CAAC;MAC/BQ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZC,OAAO,CAAClB,KAAK,CAAC,sBAAsB,EAAEiB,GAAG,CAAC;MAC1ChB,QAAQ,CAAC,iDAAiD,CAAC;MAC3DQ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAED,oBACEf,OAAA;IAAA2B,QAAA,EAEGb,SAAS,iBAAId,OAAA;MAAA2B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5B,CAAC;AAEV;AAAC7B,EAAA,CAxDQD,UAAU;EAAA,QACFP,SAAS;AAAA;AAAAsC,EAAA,GADjB/B,UAAU;AA0DnB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}