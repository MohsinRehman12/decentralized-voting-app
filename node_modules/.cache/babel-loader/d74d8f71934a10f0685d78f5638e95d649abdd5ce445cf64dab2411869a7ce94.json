{"ast":null,"code":"var _jsxFileName = \"C:\\\\votingdapp\\\\src\\\\components\\\\CreateElection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateElection() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [candidates, setCandidates] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [error, setError] = useState(null);\n  const handleCreateElection = async () => {\n    try {\n      setStatus(\"Creating election...\");\n      setError(null);\n\n      // Check if window.ethereum is available (MetaMask)\n      if (typeof window.ethereum === \"undefined\") {\n        setError(\"MetaMask is not installed. Please install MetaMask and try again.\");\n        setStatus(\"\");\n        return;\n      }\n\n      // Initialize Web3 provider using MetaMask\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n\n      // Request user to connect their account\n      await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n\n      // Get signer from the provider\n      const signer = provider.getSigner();\n\n      // Initialize contract\n      const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\n\n      // Prepare candidates array\n      const candidateArray = candidates.split(\",\").map(name => name.trim());\n\n      // Convert times to UNIX timestamp\n      const startTimestamp = Math.floor(new Date(startTime).getTime() / 1000);\n      const endTimestamp = Math.floor(new Date(endTime).getTime() / 1000);\n      if (startTimestamp >= endTimestamp) {\n        setError(\"Start time must be before end time.\");\n        setStatus(\"\");\n        return;\n      }\n\n      // Create election transaction\n      const tx = await contract.createElection(title, candidateArray, startTimestamp, endTimestamp);\n      await tx.wait();\n      setStatus(`Election \"${title}\" created successfully!`);\n      setTitle(\"\");\n      setCandidates(\"\");\n      setStartTime(\"\");\n      setEndTime(\"\");\n    } catch (err) {\n      console.error(\"Error creating election:\", err);\n      setError(\"Failed to create election. Ensure you're the contract owner and try again.\");\n      setStatus(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create New Election\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Election Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Enter election title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Candidates (comma-separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: candidates,\n          onChange: e => setCandidates(e.target.value),\n          placeholder: \"Enter candidates (e.g., Alice, Bob, Charlie)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: startTime,\n          onChange: e => setStartTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: endTime,\n          onChange: e => setEndTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateElection,\n      children: \"Create Election\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateElection, \"io55LjsSv7xmmwSAMrHoZ4O3/aM=\");\n_c = CreateElection;\nexport default CreateElection;\nvar _c;\n$RefreshReg$(_c, \"CreateElection\");","map":{"version":3,"names":["React","useState","ethers","VotingAddress","VotingAbi","jsxDEV","_jsxDEV","CreateElection","_s","title","setTitle","candidates","setCandidates","startTime","setStartTime","endTime","setEndTime","status","setStatus","error","setError","handleCreateElection","window","ethereum","provider","providers","Web3Provider","request","method","signer","getSigner","contract","Contract","candidateArray","split","map","name","trim","startTimestamp","Math","floor","Date","getTime","endTimestamp","tx","createElection","wait","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/votingdapp/src/components/CreateElection.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\r\n\r\nfunction CreateElection() {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [candidates, setCandidates] = useState(\"\");\r\n    const [startTime, setStartTime] = useState(\"\");\r\n    const [endTime, setEndTime] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleCreateElection = async () => {\r\n        try {\r\n            setStatus(\"Creating election...\");\r\n            setError(null);\r\n\r\n            // Check if window.ethereum is available (MetaMask)\r\n            if (typeof window.ethereum === \"undefined\") {\r\n                setError(\"MetaMask is not installed. Please install MetaMask and try again.\");\r\n                setStatus(\"\");\r\n                return;\r\n            }\r\n\r\n            // Initialize Web3 provider using MetaMask\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\r\n            // Request user to connect their account\r\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n\r\n            // Get signer from the provider\r\n            const signer = provider.getSigner();\r\n\r\n            // Initialize contract\r\n            const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\r\n\r\n            // Prepare candidates array\r\n            const candidateArray = candidates.split(\",\").map((name) => name.trim());\r\n\r\n            // Convert times to UNIX timestamp\r\n            const startTimestamp = Math.floor(new Date(startTime).getTime() / 1000);\r\n            const endTimestamp = Math.floor(new Date(endTime).getTime() / 1000);\r\n\r\n            if (startTimestamp >= endTimestamp) {\r\n                setError(\"Start time must be before end time.\");\r\n                setStatus(\"\");\r\n                return;\r\n            }\r\n\r\n            // Create election transaction\r\n            const tx = await contract.createElection(title, candidateArray, startTimestamp, endTimestamp);\r\n            await tx.wait();\r\n\r\n            setStatus(`Election \"${title}\" created successfully!`);\r\n            setTitle(\"\");\r\n            setCandidates(\"\");\r\n            setStartTime(\"\");\r\n            setEndTime(\"\");\r\n        } catch (err) {\r\n            console.error(\"Error creating election:\", err);\r\n            setError(\"Failed to create election. Ensure you're the contract owner and try again.\");\r\n            setStatus(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create New Election</h1>\r\n            {status && <p style={{ color: \"green\" }}>{status}</p>}\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            <div>\r\n                <label>\r\n                    Election Title:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        placeholder=\"Enter election title\"\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Candidates (comma-separated):\r\n                    <input\r\n                        type=\"text\"\r\n                        value={candidates}\r\n                        onChange={(e) => setCandidates(e.target.value)}\r\n                        placeholder=\"Enter candidates (e.g., Alice, Bob, Charlie)\"\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Start Time:\r\n                    <input\r\n                        type=\"datetime-local\"\r\n                        value={startTime}\r\n                        onChange={(e) => setStartTime(e.target.value)}\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    End Time:\r\n                    <input\r\n                        type=\"datetime-local\"\r\n                        value={endTime}\r\n                        onChange={(e) => setEndTime(e.target.value)}\r\n                    />\r\n                </label>\r\n            </div>\r\n            <button onClick={handleCreateElection}>Create Election</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateElection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}