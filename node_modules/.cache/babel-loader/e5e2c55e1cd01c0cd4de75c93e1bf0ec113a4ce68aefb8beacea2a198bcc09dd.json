{"ast":null,"code":"var _jsxFileName = \"C:\\\\votingdapp\\\\src\\\\pages\\\\VotingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VotingPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [candidates, setCandidates] = useState([]);\n  const [error, setError] = useState(null);\n  const [CanVote, setCanVote] = useState(true);\n  const [number, setNumber] = useState(0);\n  const fetchCandidates = async () => {\n    try {\n      const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\n        name: \"hardhat\",\n        chainId: 31337\n      });\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\n      const fetchedCandidates = await contract.getCandidates(id);\n      const formattedCandidates = fetchedCandidates.map(candidate => ({\n        name: candidate.name,\n        voteCount: candidate.voteCount.toString()\n      }));\n      setCandidates(formattedCandidates);\n    } catch (err) {\n      console.error(\"Error fetching candidates:\", err);\n      setError(\"Failed to load candidates.\");\n    }\n  };\n  const handleVote = async candidateIndex => {\n    try {\n      const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\n        name: \"hardhat\",\n        chainId: 31337\n      });\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\n      const tx = await contract.vote(id, candidateIndex);\n      await tx.wait();\n      fetchCandidates(); // Refresh candidates list\n    } catch (err) {\n      console.error(\"Error voting:\", err);\n      setError(\"Failed to submit your vote.\");\n    }\n  };\n  useEffect(() => {\n    fetchCandidates();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Election \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: candidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [candidate.name, \": \", candidate.voteCount, \" votes\", /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleVote(index),\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(VotingPage, \"YOvZNpVpDpWiz2ZF4xJl/9VzZj0=\", false, function () {\n  return [useParams];\n});\n_c = VotingPage;\nexport default VotingPage;\nvar _c;\n$RefreshReg$(_c, \"VotingPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","ethers","VotingAddress","VotingAbi","Button","jsxDEV","_jsxDEV","VotingPage","_s","id","candidates","setCandidates","error","setError","CanVote","setCanVote","number","setNumber","fetchCandidates","provider","providers","JsonRpcProvider","name","chainId","signer","getSigner","contract","Contract","fetchedCandidates","getCandidates","formattedCandidates","map","candidate","voteCount","toString","err","console","handleVote","candidateIndex","tx","vote","wait","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","index","onClick","_c","$RefreshReg$"],"sources":["C:/votingdapp/src/pages/VotingPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ethers } from \"ethers\";\r\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nfunction VotingPage() {\r\n    const { id } = useParams();\r\n    const [candidates, setCandidates] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [CanVote, setCanVote] = useState(true);\r\n    const [number, setNumber] = useState(0);\r\n\r\n    const fetchCandidates = async () => {\r\n        try {\r\n            const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\r\n                name: \"hardhat\",\r\n                chainId: 31337,\r\n            });\r\n\r\n            const signer = provider.getSigner();\r\n            const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\r\n\r\n            const fetchedCandidates = await contract.getCandidates(id);\r\n\r\n            const formattedCandidates = fetchedCandidates.map((candidate) => ({\r\n                name: candidate.name,\r\n                voteCount: candidate.voteCount.toString(),\r\n            }));\r\n\r\n            setCandidates(formattedCandidates);\r\n        } catch (err) {\r\n            console.error(\"Error fetching candidates:\", err);\r\n            setError(\"Failed to load candidates.\");\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    const handleVote = async (candidateIndex) => {\r\n        try {\r\n            const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\r\n                name: \"hardhat\",\r\n                chainId: 31337,\r\n            });            const signer = provider.getSigner();\r\n            const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\r\n\r\n            const tx = await contract.vote(id, candidateIndex);\r\n            await tx.wait();\r\n            fetchCandidates(); // Refresh candidates list\r\n        } catch (err) {\r\n            console.error(\"Error voting:\", err);\r\n            setError(\"Failed to submit your vote.\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCandidates();\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Election {id}</h1>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            <ul>\r\n                {candidates.map((candidate, index) => (\r\n                    <li key={index}>\r\n                        {candidate.name}: {candidate.voteCount} votes\r\n                        <Button onClick={() => handleVote(index)}>Vote</Button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VotingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}