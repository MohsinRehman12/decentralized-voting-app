{"ast":null,"code":"var _jsxFileName = \"C:\\\\votingdapp\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport ElectionCards from \"./components/ElectionCard\";\nimport VotingPage from \"./pages/VotingPage\";\nimport CreateElection from \"./components/CreateElection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction handleAccountsChanged(accounts) {\n  if (accounts.length > 0 && account !== accounts[0]) {\n    setAccount(accounts[0]);\n    canVote();\n  } else {\n    setIsConnected(false);\n    setAccount(null);\n  }\n}\nasync function connectToMetamask() {\n  if (window.ethereum) {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n      setAccount(address);\n      console.log(\"Metamask Connected : \" + address);\n      setIsConnected(true);\n      canVote();\n    } catch (err) {\n      console.error(err);\n    }\n  } else {\n    console.error(\"Metamask is not detected in the browser\");\n  }\n}\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ElectionCards, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create\",\n        element: /*#__PURE__*/_jsxDEV(CreateElection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/election/:id\",\n        element: /*#__PURE__*/_jsxDEV(VotingPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","ElectionCards","VotingPage","CreateElection","jsxDEV","_jsxDEV","handleAccountsChanged","accounts","length","account","setAccount","canVote","setIsConnected","connectToMetamask","window","ethereum","provider","ethers","providers","Web3Provider","setProvider","send","signer","getSigner","address","getAddress","console","log","err","error","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/votingdapp/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport ElectionCards from \"./components/ElectionCard\";\nimport VotingPage from \"./pages/VotingPage\";\nimport CreateElection from \"./components/CreateElection\";\n\nfunction handleAccountsChanged(accounts) {\n  if (accounts.length > 0 && account !== accounts[0]) {\n    setAccount(accounts[0]);\n    canVote();\n  } else {\n    setIsConnected(false);\n    setAccount(null);\n  }\n}\n\nasync function connectToMetamask() {\n  if (window.ethereum) {\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      setProvider(provider);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n      setAccount(address);\n      console.log(\"Metamask Connected : \" + address);\n      setIsConnected(true);\n      canVote();\n    } catch (err) {\n      console.error(err);\n    }\n  } else {\n    console.error(\"Metamask is not detected in the browser\")\n  }\n}\n\n\nfunction App() {\n    return (\n      \n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<ElectionCards />} />\n                <Route path=\"/create\" element={<CreateElection />} />\n                <Route path=\"/election/:id\" element={<VotingPage />} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,qBAAqBA,CAACC,QAAQ,EAAE;EACvC,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,IAAIC,OAAO,KAAKF,QAAQ,CAAC,CAAC,CAAC,EAAE;IAClDG,UAAU,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC;IACvBI,OAAO,CAAC,CAAC;EACX,CAAC,MAAM;IACLC,cAAc,CAAC,KAAK,CAAC;IACrBF,UAAU,CAAC,IAAI,CAAC;EAClB;AACF;AAEA,eAAeG,iBAAiBA,CAAA,EAAG;EACjC,IAAIC,MAAM,CAACC,QAAQ,EAAE;IACnB,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,SAAS,CAACC,YAAY,CAACL,MAAM,CAACC,QAAQ,CAAC;MACnEK,WAAW,CAACJ,QAAQ,CAAC;MACrB,MAAMA,QAAQ,CAACK,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC9C,MAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAS,CAAC,CAAC;MACnC,MAAMC,OAAO,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;MACzCf,UAAU,CAACc,OAAO,CAAC;MACnBE,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGH,OAAO,CAAC;MAC9CZ,cAAc,CAAC,IAAI,CAAC;MACpBD,OAAO,CAAC,CAAC;IACX,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;IACpB;EACF,CAAC,MAAM;IACLF,OAAO,CAACG,KAAK,CAAC,yCAAyC,CAAC;EAC1D;AACF;AAGA,SAASC,GAAGA,CAAA,EAAG;EACX,oBAEIzB,OAAA,CAACP,MAAM;IAAAiC,QAAA,eACH1B,OAAA,CAACN,MAAM;MAAAgC,QAAA,gBACH1B,OAAA,CAACL,KAAK;QAACgC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAE5B,OAAA,CAACJ,aAAa;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9ChC,OAAA,CAACL,KAAK;QAACgC,IAAI,EAAC,SAAS;QAACC,OAAO,eAAE5B,OAAA,CAACF,cAAc;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDhC,OAAA,CAACL,KAAK;QAACgC,IAAI,EAAC,eAAe;QAACC,OAAO,eAAE5B,OAAA,CAACH,UAAU;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB;AAACC,EAAA,GAXQR,GAAG;AAaZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}