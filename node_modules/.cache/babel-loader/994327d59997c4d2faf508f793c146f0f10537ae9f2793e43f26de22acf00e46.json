{"ast":null,"code":"var _jsxFileName = \"C:\\\\votingdapp\\\\src\\\\components\\\\ElectionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\nimport { Card, CardContent, Typography, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gradients = [\"linear-gradient(to right, #a8edea, #fed6e3)\", \"linear-gradient(to right, #ff9a9e, #fad0c4)\", \"linear-gradient(to right, #a18cd1, #fbc2eb)\", \"linear-gradient(to right, #fbc2eb, #a6c1ee)\", \"linear-gradient(to right, #d4fc79, #96e6a1)\", \"linear-gradient(to right, #84fab0, #8fd3f4)\", \"linear-gradient(to right, #fbc2eb, #a6c1ee)\"];\nfunction ElectionCards() {\n  _s();\n  const [elections, setElections] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const fetchElections = async () => {\n    try {\n      const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\n        name: \"hardhat\",\n        chainId: 31337\n      });\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\n      const electionCount = await contract.electionCount();\n      const fetchedElections = [];\n      for (let i = 0; i < electionCount; i++) {\n        const election = await contract.getElection(i);\n        const candidates = await contract.getCandidates(i);\n        const formattedCandidates = candidates.map(candidate => ({\n          name: candidate.name,\n          voteCount: candidate.voteCount.toString()\n        }));\n        fetchedElections.push({\n          id: i,\n          title: election.title,\n          remainingTime: Math.max(0, election.endTime - Math.floor(Date.now() / 1000)),\n          candidates: formattedCandidates\n        });\n      }\n      setElections(fetchedElections);\n    } catch (err) {\n      console.error(\"Error fetching elections:\", err);\n      setError(\"Failed to load elections.\");\n    }\n  };\n  useEffect(() => {\n    fetchElections();\n  }, []);\n  const handleCardClick = electionId => {\n    navigate(`/election/${electionId}`);\n  };\n  const getRandomGradient = () => {\n    return gradients[Math.floor(Math.random() * gradients.length)];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: \"20px\",\n      justifyContent: \"center\",\n      marginTop: \"20px\"\n    },\n    children: elections.map(election => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"300px\",\n        height: \"200px\",\n        background: getRandomGradient(),\n        color: \"#ffffff\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        cursor: \"pointer\"\n      },\n      onClick: () => handleCardClick(election.id),\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: election.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          style: {\n            marginTop: \"10px\"\n          },\n          children: election.remainingTime > 0 ? `Time remaining: ${Math.floor(election.remainingTime / 60)} minutes` : \"Election ended\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, election.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(ElectionCards, \"qrctIFpyCtdh4VGzCzJM7w+IwS4=\", false, function () {\n  return [useNavigate];\n});\n_c = ElectionCards;\nexport default ElectionCards;\nvar _c;\n$RefreshReg$(_c, \"ElectionCards\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ethers","VotingAddress","VotingAbi","Card","CardContent","Typography","Button","jsxDEV","_jsxDEV","gradients","ElectionCards","_s","elections","setElections","error","setError","navigate","fetchElections","provider","providers","JsonRpcProvider","name","chainId","signer","getSigner","contract","Contract","electionCount","fetchedElections","i","election","getElection","candidates","getCandidates","formattedCandidates","map","candidate","voteCount","toString","push","id","title","remainingTime","Math","max","endTime","floor","Date","now","err","console","handleCardClick","electionId","getRandomGradient","random","length","style","display","flexWrap","gap","justifyContent","marginTop","children","width","height","background","color","flexDirection","alignItems","cursor","onClick","textAlign","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/votingdapp/src/components/ElectionCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ethers } from \"ethers\";\r\nimport { VotingAddress, VotingAbi } from \"../context/constant\";\r\nimport { Card, CardContent, Typography, Button } from \"@mui/material\";\r\n\r\nconst gradients = [\r\n    \"linear-gradient(to right, #a8edea, #fed6e3)\",\r\n    \"linear-gradient(to right, #ff9a9e, #fad0c4)\",\r\n    \"linear-gradient(to right, #a18cd1, #fbc2eb)\",\r\n    \"linear-gradient(to right, #fbc2eb, #a6c1ee)\",\r\n    \"linear-gradient(to right, #d4fc79, #96e6a1)\",\r\n    \"linear-gradient(to right, #84fab0, #8fd3f4)\",\r\n    \"linear-gradient(to right, #fbc2eb, #a6c1ee)\",\r\n];\r\n\r\nfunction ElectionCards() {\r\n    const [elections, setElections] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const fetchElections = async () => {\r\n        try {\r\n            const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\r\n                name: \"hardhat\",\r\n                chainId: 31337,\r\n            });\r\n\r\n            const signer = provider.getSigner();\r\n            const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\r\n\r\n            const electionCount = await contract.electionCount();\r\n            const fetchedElections = [];\r\n\r\n            for (let i = 0; i < electionCount; i++) {\r\n                const election = await contract.getElection(i);\r\n                const candidates = await contract.getCandidates(i);\r\n\r\n                const formattedCandidates = candidates.map((candidate) => ({\r\n                    name: candidate.name,\r\n                    voteCount: candidate.voteCount.toString(),\r\n                }));\r\n\r\n                fetchedElections.push({\r\n                    id: i,\r\n                    title: election.title,\r\n                    remainingTime: Math.max(0, election.endTime - Math.floor(Date.now() / 1000)),\r\n                    candidates: formattedCandidates,\r\n                });\r\n            }\r\n\r\n            setElections(fetchedElections);\r\n        } catch (err) {\r\n            console.error(\"Error fetching elections:\", err);\r\n            setError(\"Failed to load elections.\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchElections();\r\n    }, []);\r\n\r\n    const handleCardClick = (electionId) => {\r\n        navigate(`/election/${electionId}`);\r\n    };\r\n\r\n    const getRandomGradient = () => {\r\n        return gradients[Math.floor(Math.random() * gradients.length)];\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"20px\", justifyContent: \"center\", marginTop: \"20px\" }}>\r\n        {elections.map((election) => (\r\n            <Card\r\n                key={election.id}\r\n                style={{\r\n                    width: \"300px\",\r\n                    height: \"200px\",\r\n                    background: getRandomGradient(),\r\n                    color: \"#ffffff\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n                onClick={() => handleCardClick(election.id)}\r\n            >\r\n                <CardContent style={{ textAlign: \"center\" }}>\r\n                    <Typography variant=\"h5\" style={{ fontWeight: \"bold\" }}>\r\n                        {election.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" style={{ marginTop: \"10px\" }}>\r\n                        {election.remainingTime > 0\r\n                            ? `Time remaining: ${Math.floor(election.remainingTime / 60)} minutes`\r\n                            : \"Election ended\"}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        ))}\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ElectionCards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,aAAa,EAAEC,SAAS,QAAQ,qBAAqB;AAC9D,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,SAAS,GAAG,CACd,6CAA6C,EAC7C,6CAA6C,EAC7C,6CAA6C,EAC7C,6CAA6C,EAC7C,6CAA6C,EAC7C,6CAA6C,EAC7C,6CAA6C,CAChD;AAED,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,IAAIlB,MAAM,CAACmB,SAAS,CAACC,eAAe,CAAC,uBAAuB,EAAE;QAC3EC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE;MACb,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAS,CAAC,CAAC;MACnC,MAAMC,QAAQ,GAAG,IAAIzB,MAAM,CAAC0B,QAAQ,CAACzB,aAAa,EAAEC,SAAS,EAAEqB,MAAM,CAAC;MAEtE,MAAMI,aAAa,GAAG,MAAMF,QAAQ,CAACE,aAAa,CAAC,CAAC;MACpD,MAAMC,gBAAgB,GAAG,EAAE;MAE3B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,EAAEE,CAAC,EAAE,EAAE;QACpC,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,WAAW,CAACF,CAAC,CAAC;QAC9C,MAAMG,UAAU,GAAG,MAAMP,QAAQ,CAACQ,aAAa,CAACJ,CAAC,CAAC;QAElD,MAAMK,mBAAmB,GAAGF,UAAU,CAACG,GAAG,CAAEC,SAAS,KAAM;UACvDf,IAAI,EAAEe,SAAS,CAACf,IAAI;UACpBgB,SAAS,EAAED,SAAS,CAACC,SAAS,CAACC,QAAQ,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEHV,gBAAgB,CAACW,IAAI,CAAC;UAClBC,EAAE,EAAEX,CAAC;UACLY,KAAK,EAAEX,QAAQ,CAACW,KAAK;UACrBC,aAAa,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEd,QAAQ,CAACe,OAAO,GAAGF,IAAI,CAACG,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;UAC5EhB,UAAU,EAAEE;QAChB,CAAC,CAAC;MACN;MAEArB,YAAY,CAACe,gBAAgB,CAAC;IAClC,CAAC,CAAC,OAAOqB,GAAG,EAAE;MACVC,OAAO,CAACpC,KAAK,CAAC,2BAA2B,EAAEmC,GAAG,CAAC;MAC/ClC,QAAQ,CAAC,2BAA2B,CAAC;IACzC;EACJ,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACZoB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkC,eAAe,GAAIC,UAAU,IAAK;IACpCpC,QAAQ,CAAC,aAAaoC,UAAU,EAAE,CAAC;EACvC,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,OAAO5C,SAAS,CAACkC,IAAI,CAACG,KAAK,CAACH,IAAI,CAACW,MAAM,CAAC,CAAC,GAAG7C,SAAS,CAAC8C,MAAM,CAAC,CAAC;EAClE,CAAC;EAED,oBACI/C,OAAA;IAAKgD,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,MAAM;MAAEC,GAAG,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,EAC3GlD,SAAS,CAACuB,GAAG,CAAEL,QAAQ,iBACpBtB,OAAA,CAACL,IAAI;MAEDqD,KAAK,EAAE;QACHO,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,OAAO;QACfC,UAAU,EAAEZ,iBAAiB,CAAC,CAAC;QAC/Ba,KAAK,EAAE,SAAS;QAChBT,OAAO,EAAE,MAAM;QACfU,aAAa,EAAE,QAAQ;QACvBP,cAAc,EAAE,QAAQ;QACxBQ,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE;MACZ,CAAE;MACFC,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAACrB,QAAQ,CAACU,EAAE,CAAE;MAAAsB,QAAA,eAE5CtD,OAAA,CAACJ,WAAW;QAACoD,KAAK,EAAE;UAAEe,SAAS,EAAE;QAAS,CAAE;QAAAT,QAAA,gBACxCtD,OAAA,CAACH,UAAU;UAACmE,OAAO,EAAC,IAAI;UAAChB,KAAK,EAAE;YAAEiB,UAAU,EAAE;UAAO,CAAE;UAAAX,QAAA,EAClDhC,QAAQ,CAACW;QAAK;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACbrE,OAAA,CAACH,UAAU;UAACmE,OAAO,EAAC,OAAO;UAAChB,KAAK,EAAE;YAAEK,SAAS,EAAE;UAAO,CAAE;UAAAC,QAAA,EACpDhC,QAAQ,CAACY,aAAa,GAAG,CAAC,GACrB,mBAAmBC,IAAI,CAACG,KAAK,CAAChB,QAAQ,CAACY,aAAa,GAAG,EAAE,CAAC,UAAU,GACpE;QAAgB;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC,GAvBT/C,QAAQ,CAACU,EAAE;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAwBd,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAAClE,EAAA,CAtFQD,aAAa;EAAA,QAGDX,WAAW;AAAA;AAAA+E,EAAA,GAHvBpE,aAAa;AAwFtB,eAAeA,aAAa;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}