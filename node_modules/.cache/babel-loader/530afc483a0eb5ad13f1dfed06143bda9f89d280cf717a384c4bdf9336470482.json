{"ast":null,"code":"var _jsxFileName = \"C:\\\\votingdapp\\\\src\\\\components\\\\ElectionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport { VotingAddress, VotingAbi } from \"./context/constant\";\nimport { Card, CardContent, Typography, Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ElectionCards() {\n  _s();\n  const [elections, setElections] = useState([]);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const fetchElections = async () => {\n    try {\n      const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\n        name: \"hardhat\",\n        chainId: 31337\n      });\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\n      const electionCount = await contract.electionCount();\n      const fetchedElections = [];\n      for (let i = 0; i < electionCount; i++) {\n        const election = await contract.getElection(i);\n        const candidates = await contract.getCandidates(i);\n        const formattedCandidates = candidates.map(candidate => ({\n          name: candidate.name,\n          voteCount: candidate.voteCount.toString()\n        }));\n        fetchedElections.push({\n          id: i,\n          title: election.title,\n          remainingTime: Math.max(0, election.endTime - Math.floor(Date.now() / 1000)),\n          candidates: formattedCandidates\n        });\n      }\n      setElections(fetchedElections);\n    } catch (err) {\n      console.error(\"Error fetching elections:\", err);\n      setError(\"Failed to load elections.\");\n    }\n  };\n  useEffect(() => {\n    fetchElections();\n  }, []);\n  const handleCardClick = electionId => {\n    navigate(`/election/${electionId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Elections\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"20px\"\n      },\n      children: elections.map(election => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: \"300px\",\n          cursor: \"pointer\"\n        },\n        onClick: () => handleCardClick(election.id),\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: election.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Time Remaining:\", \" \", election.remainingTime > 0 ? `${Math.floor(election.remainingTime / 60)} minutes` : \"Election has ended\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Total Candidates: \", election.candidates.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            onClick: e => {\n              e.stopPropagation(); // Prevent card click navigation\n              handleCardClick(election.id);\n            },\n            children: \"Vote Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, election.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(ElectionCards, \"qrctIFpyCtdh4VGzCzJM7w+IwS4=\", false, function () {\n  return [useNavigate];\n});\n_c = ElectionCards;\nexport default ElectionCards;\nvar _c;\n$RefreshReg$(_c, \"ElectionCards\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ethers","VotingAddress","VotingAbi","Card","CardContent","Typography","Button","jsxDEV","_jsxDEV","ElectionCards","_s","elections","setElections","error","setError","navigate","fetchElections","provider","providers","JsonRpcProvider","name","chainId","signer","getSigner","contract","Contract","electionCount","fetchedElections","i","election","getElection","candidates","getCandidates","formattedCandidates","map","candidate","voteCount","toString","push","id","title","remainingTime","Math","max","endTime","floor","Date","now","err","console","handleCardClick","electionId","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","display","flexWrap","gap","width","cursor","onClick","variant","length","size","e","stopPropagation","_c","$RefreshReg$"],"sources":["C:/votingdapp/src/components/ElectionCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ethers } from \"ethers\";\r\nimport { VotingAddress, VotingAbi } from \"./context/constant\";\r\nimport { Card, CardContent, Typography, Button } from \"@mui/material\";\r\n\r\nfunction ElectionCards() {\r\n    const [elections, setElections] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const fetchElections = async () => {\r\n        try {\r\n            const provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\r\n                name: \"hardhat\",\r\n                chainId: 31337,\r\n            });\r\n\r\n            const signer = provider.getSigner();\r\n            const contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\r\n\r\n            const electionCount = await contract.electionCount();\r\n            const fetchedElections = [];\r\n\r\n            for (let i = 0; i < electionCount; i++) {\r\n                const election = await contract.getElection(i);\r\n                const candidates = await contract.getCandidates(i);\r\n\r\n                const formattedCandidates = candidates.map((candidate) => ({\r\n                    name: candidate.name,\r\n                    voteCount: candidate.voteCount.toString(),\r\n                }));\r\n\r\n                fetchedElections.push({\r\n                    id: i,\r\n                    title: election.title,\r\n                    remainingTime: Math.max(0, election.endTime - Math.floor(Date.now() / 1000)),\r\n                    candidates: formattedCandidates,\r\n                });\r\n            }\r\n\r\n            setElections(fetchedElections);\r\n        } catch (err) {\r\n            console.error(\"Error fetching elections:\", err);\r\n            setError(\"Failed to load elections.\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchElections();\r\n    }, []);\r\n\r\n    const handleCardClick = (electionId) => {\r\n        navigate(`/election/${electionId}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Elections</h1>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"20px\" }}>\r\n                {elections.map((election) => (\r\n                    <Card\r\n                        key={election.id}\r\n                        style={{ width: \"300px\", cursor: \"pointer\" }}\r\n                        onClick={() => handleCardClick(election.id)}\r\n                    >\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\">{election.title}</Typography>\r\n                            <Typography variant=\"body2\">\r\n                                Time Remaining:{\" \"}\r\n                                {election.remainingTime > 0\r\n                                    ? `${Math.floor(election.remainingTime / 60)} minutes`\r\n                                    : \"Election has ended\"}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                                Total Candidates: {election.candidates.length}\r\n                            </Typography>\r\n                            <Button\r\n                                size=\"small\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation(); // Prevent card click navigation\r\n                                    handleCardClick(election.id);\r\n                                }}\r\n                            >\r\n                                Vote Now\r\n                            </Button>\r\n                        </CardContent>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ElectionCards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}