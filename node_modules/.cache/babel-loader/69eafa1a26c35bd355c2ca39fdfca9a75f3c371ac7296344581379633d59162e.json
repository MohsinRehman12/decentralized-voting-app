{"ast":null,"code":"var _jsxFileName = \"C:\\\\votingdapp\\\\src\\\\pages\\\\Home.jsx\";\nimport { ethers } from 'ethers';\nimport { VotingAddress, VotingAbi } from '../context/constant';\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\nconst signer = provider.getSigner();\nconst contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  const fetchElectionDetails = async () => {\n    try {\n      const election = await contract.getElection(0); // Use the appropriate election ID\n      const currentTime = Math.floor(Date.now() / 1000);\n      console.log(\"Current time (UNIX timestamp):\", currentTime);\n      console.log(\"Election start time (UNIX timestamp):\", election.startTime.toString());\n      console.log(\"Election end time (UNIX timestamp):\", election.endTime.toString());\n      if (currentTime < election.startTime.toNumber()) {\n        setElectionStatus(\"Election has not started yet.\");\n        setCanVote(false);\n      } else if (currentTime > election.endTime.toNumber()) {\n        setElectionStatus(\"Election has ended.\");\n        setCanVote(false);\n      } else {\n        setElectionStatus(\"Election is ongoing.\");\n        setCanVote(true);\n      }\n      setCandidates(election.candidates.map(candidate => ({\n        name: candidate.name,\n        voteCount: candidate.voteCount.toString()\n      })));\n    } catch (err) {\n      console.error(\"Error fetching election details:\", err);\n      setError(\"Failed to load election details.\");\n    }\n  };\n  const vote = async candidateIndex => {\n    try {\n      const hasVoted = await contract.hasVoted(0, signerAddress);\n      if (hasVoted) {\n        setError(\"You have already voted in this election.\");\n        setCanVote(false);\n        return;\n      }\n      if (candidateIndex < 0 || candidateIndex >= candidates.length) {\n        setError(\"Invalid candidate index.\");\n        return;\n      }\n      const tx = await contract.vote(0, candidateIndex);\n      const receipt = await tx.wait();\n      console.log(\"Transaction Hash:\", receipt.transactionHash);\n      setError(\"Successfully voted!\");\n      fetchElectionDetails(); // Refresh election details after voting\n    } catch (err) {\n      console.error(\"Error during voting:\", err);\n      setError(\"An unexpected error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Election \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: electionStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), canVote ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: candidates.map((candidate, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [candidate.name, \": \", candidate.voteCount, \" votes\", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => vote(index),\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You cannot vote in this election.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["ethers","VotingAddress","VotingAbi","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","React","jsxDEV","_jsxDEV","Home","fetchElectionDetails","election","getElection","currentTime","Math","floor","Date","now","console","log","startTime","toString","endTime","toNumber","setElectionStatus","setCanVote","setCandidates","candidates","map","candidate","name","voteCount","err","error","setError","vote","candidateIndex","hasVoted","signerAddress","length","tx","receipt","wait","transactionHash","children","id","fileName","_jsxFileName","lineNumber","columnNumber","style","color","electionStatus","canVote","index","Button","variant","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/votingdapp/src/pages/Home.jsx"],"sourcesContent":["import { ethers } from 'ethers';\r\nimport { VotingAddress, VotingAbi } from '../context/constant';\r\n\r\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\r\nconst signer = provider.getSigner();\r\nconst contract = new ethers.Contract(VotingAddress, VotingAbi, signer);\r\n\r\nimport React from 'react'\r\n\r\nconst Home = () => {\r\n    const fetchElectionDetails = async () => {\r\n        try {\r\n          const election = await contract.getElection(0); // Use the appropriate election ID\r\n          const currentTime = Math.floor(Date.now() / 1000);\r\n      \r\n          console.log(\"Current time (UNIX timestamp):\", currentTime);\r\n          console.log(\"Election start time (UNIX timestamp):\", election.startTime.toString());\r\n          console.log(\"Election end time (UNIX timestamp):\", election.endTime.toString());\r\n      \r\n          if (currentTime < election.startTime.toNumber()) {\r\n            setElectionStatus(\"Election has not started yet.\");\r\n            setCanVote(false);\r\n          } else if (currentTime > election.endTime.toNumber()) {\r\n            setElectionStatus(\"Election has ended.\");\r\n            setCanVote(false);\r\n          } else {\r\n            setElectionStatus(\"Election is ongoing.\");\r\n            setCanVote(true);\r\n          }\r\n      \r\n          setCandidates(election.candidates.map((candidate) => ({\r\n            name: candidate.name,\r\n            voteCount: candidate.voteCount.toString()\r\n          })));\r\n        } catch (err) {\r\n          console.error(\"Error fetching election details:\", err);\r\n          setError(\"Failed to load election details.\");\r\n        }\r\n      };\r\n\r\n      const vote = async (candidateIndex) => {\r\n        try {\r\n          const hasVoted = await contract.hasVoted(0, signerAddress);\r\n          if (hasVoted) {\r\n            setError(\"You have already voted in this election.\");\r\n            setCanVote(false);\r\n            return;\r\n          }\r\n      \r\n          if (candidateIndex < 0 || candidateIndex >= candidates.length) {\r\n            setError(\"Invalid candidate index.\");\r\n            return;\r\n          }\r\n      \r\n          const tx = await contract.vote(0, candidateIndex);\r\n          const receipt = await tx.wait();\r\n      \r\n          console.log(\"Transaction Hash:\", receipt.transactionHash);\r\n          setError(\"Successfully voted!\");\r\n      \r\n          fetchElectionDetails();  // Refresh election details after voting\r\n        } catch (err) {\r\n          console.error(\"Error during voting:\", err);\r\n          setError(\"An unexpected error occurred. Please try again.\");\r\n        }\r\n      };\r\n      \r\n      \r\n      return (\r\n        <div>\r\n          <h1>Election {id}</h1>\r\n          {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n          <p>{electionStatus}</p>\r\n          {canVote ? (\r\n            <ul>\r\n              {candidates.map((candidate, index) => (\r\n                <li key={index}>\r\n                  {candidate.name}: {candidate.voteCount} votes\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => vote(index)}\r\n                    style={{ marginLeft: \"10px\" }}\r\n                  >\r\n                    Vote\r\n                  </Button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>You cannot vote in this election.</p>\r\n          )}\r\n        </div>\r\n      );\r\n      \r\n}\r\n\r\nexport default Home"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}